
package db_client;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import printertest.Printer;
import printertest.ReadyReceiptListPrint;

/**
 *
 * @author Jahaanzaib
 */
public class ReadyReceiptList extends javax.swing.JFrame {

    
        DefaultTableModel model = new DefaultTableModel();
        ArrayList<String> ReceiptList ;
         String[][] arrayData;
        
    public ReadyReceiptList(String phone) {
        this.setPreferredSize(new Dimension(412, 530));

        

        initComponents();
        CustomerName.setText(ClientType.getClientName(phone));
        phoneLbl.setText(phone);
        model.addColumn("Receipt Number");
        model.addColumn("Date");
        ReceiptList = BookingType.getReadyReceiptList(phone);
        arrayData = new String[ReceiptList.size()/2][2];
        
        int j=0;
        for (int i = 0; i < ReceiptList.size(); i += 2) {
            model.addRow(new Object[]{ReceiptList.get(i), ReceiptList.get(i + 1)});
             arrayData[j][0]=ReceiptList.get(i);
             arrayData[j++][1]=ReceiptList.get(i+1);
            
        }
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        ListTable.getColumn("Receipt Number").setCellRenderer( centerRenderer );
        ListTable.getColumn("Date").setCellRenderer( centerRenderer );
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblExpected = new javax.swing.JLabel();
        phoneLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListTable = new javax.swing.JTable();
        CustomerName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(15, 88, 121));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblExpected.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblExpected.setForeground(new java.awt.Color(255, 255, 255));
        lblExpected.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblExpected.setText("Ready Receipts");
        jPanel1.add(lblExpected, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 230, 40));

        phoneLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        phoneLbl.setForeground(new java.awt.Color(255, 255, 255));
        phoneLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phoneLbl.setText("Phone");
        jPanel1.add(phoneLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 180, -1));

        jScrollPane1.setBackground(new java.awt.Color(15, 88, 121));
        jScrollPane1.setEnabled(false);

        ListTable.setModel(model);
        ListTable.setToolTipText("Receipt List");
        ListTable.setFocusable(false);
        ListTable.setGridColor(new java.awt.Color(255, 255, 255));
        ListTable.setRowSelectionAllowed(false);
        ListTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(ListTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 340, 220));

        CustomerName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CustomerName.setForeground(new java.awt.Color(255, 255, 255));
        CustomerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CustomerName.setText("Customer");
        jPanel1.add(CustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 50, 180, -1));

        jButton1.setText("Print");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 160, -1));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 410, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new ReadyReceiptListPrint(arrayData, ReceiptList.size()/2, new String[]{"Receipt#","Due Date"}, "Ready Receipt List", dateCreator(0));
    }//GEN-LAST:event_jButton1ActionPerformed

    public String dateCreator(int toAdd) {

		Calendar c = Calendar.getInstance();

		if (c.get(Calendar.DAY_OF_WEEK) == 1) {
			c.add(c.DATE, 1);
		}

		String date = c.getTime().toString();
		String dateArray[] = date.split(" ");
		String timeArray[] = dateArray[3].split(":");
		int hour = Integer.parseInt(timeArray[0]);

		String timeStamp = dateArray[0] + " " + dateArray[1] + " " + dateArray[2] + " " + (hour > 12 ? hour - 12 : hour) + ":" + timeArray[1] + ":" + timeArray[2] + (hour >= 12 ? " PM" : " AM");

		return timeStamp;
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CustomerName;
    private javax.swing.JTable ListTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblExpected;
    private javax.swing.JLabel phoneLbl;
    // End of variables declaration//GEN-END:variables
}
